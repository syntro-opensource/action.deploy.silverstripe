name: 'Deploy Silverstripe'
description: 'Deploy a Github repository containing a Silverstripe project using Ansible'
inputs:
  # -----------------------------
  # Required inputs
  # -----------------------------
  host:
    description: 'The hostname or IP of the target host'
    required: true
  host_user:
    description: 'The user on the host which is used to deploy'
    required: true
  private_key:
    description: 'The private key with which to authenticate'
    required: true
  working_dir:
    description: 'The base directory where all files are stored. Note: this is NOT the webroot!'
    required: true
  base_url:
    description: 'The url on which the page will listen (the SS_BASE_URL)'
    required: true
  admin_username:
    description: 'The username of the default admin'
    required: true
  admin_password:
    description: 'The password of the default admin'
    required: true
  database_name:
    description: 'The name of the database to use'
    required: true
  database_username:
    description: 'The username used to access the database'
    required: true
  database_password:
    description: 'The password used to access the database'
    required: true
  database_server:
    description: 'The database server'
    required: true
    default: localhost
  # -----------------------------
  # Optional inputs
  # -----------------------------
  retained_releases:
    description: 'How many releases should be retained. useful if you need to rollback to an old release quickly.'
    default: 4
  environment_type:
    description: 'The environment type to be set. Defaults to live'
    default: 'live'
  htaccess_template:
    description: 'Render a custom htaccess file. Uses the default if not specified'
    default: 'htaccess.public.j2'
  # provisioning_commands:
  # add_env_keys:

runs:
  using: composite
  steps:
    - name: Get the version / ref to deploy
      id: get_version
      shell: bash
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Get the version / ref to deploy
      # shell: bash
      container: node:16
      run: ls ${{ github.action_path }}/playbook
    - name: Deploy to desired server
      uses: arillso/action.playbook@master
      with:
        user: ${{ inputs.host_user }}
        playbook: ${GITHUB_ACTION_PATH}/playbook/playbook.yml
        inventory: ${GITHUB_ACTION_PATH}/playbook/hosts
        galaxy_file: ${GITHUB_ACTION_PATH}/playbook/requirements.yml
        private_key: ${{ inputs.private_key }}
        # extra_vars:
      env:
        ACTIONENV_WORKING_DIR: ${{ inputs.working_dir }}
        ACTIONENV_SS_BASE_URL: ${{ inputs.base_url }}
        ACTIONENV_SS_ADMIN_USERNAME: ${{ inputs.admin_username }}
        ACTIONENV_SS_ADMIN_PASSWORD: ${{ inputs.admin_password }}
        ACTIONENV_SS_DATABASE_SERVER: ${{ inputs.database_server }}
        ACTIONENV_SS_DATABASE_NAME: ${{ inputs.database_name }}
        ACTIONENV_SS_DATABASE_USERNAME: ${{ inputs.database_username }}
        ACTIONENV_SS_DATABASE_PASSWORD: ${{ inputs.database_password }}
        ACTIONENV_HTACCESS_TEMPLATE: ${{ inputs.htaccess_template }}
        ACTIONENV_ENVIRONMENT_TYPE: ${{ inputs.environment_type }}
        ACTIONENV_ANSIBLE_HOST: ${{ inputs.host }}
        ACTIONENV_ANSIBLE_USER: ${{ inputs.host_user }}
        ACTIONENV_PROJECT_REPOSITORY: ${{ github.repositoryUrl }}
        ACTIONENV_PROJECT_VERSION: ${{ steps.get_version.outputs.VERSION  }}
        ACTIONENV_RETAIN_RELEASES: ${{ inputs.retained_releases }}
        ANSIBLE_HOST_KEY_CHECKING: 'false'
        ANSIBLE_DEPRECATION_WARNINGS: 'false'
        ANSIBLE_PIPELINING: 'true'
